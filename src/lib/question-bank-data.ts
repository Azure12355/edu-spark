// src/lib/question-bank-data.ts
import { TagProps } from 'antd';

export type QuestionType = 'single-choice' | 'multi-choice' | 'true-false' | 'fill-in' | 'short-answer' | 'definition' | 'essay' | 'calculation' | 'programming';

export const questionTypeMap: Record<QuestionType, { text: string; color: TagProps['color'] }> = {
    'single-choice': { text: '单选题', color: 'blue' },
    'multi-choice': { text: '多选题', color: 'cyan' },
    'true-false': { text: '判断题', color: 'green' },
    'fill-in': { text: '填空题', color: 'gold' },
    'short-answer': { text: '简答题', color: 'purple' },
    'definition': { text: '名词解释', color: 'magenta' },
    'essay': { text: '论述题', color: 'volcano' },
    'calculation': { text: '计算题', color: 'orange' },
    'programming': { text: '程序题', color: 'geekblue' },
};

export interface Question {
    id: string;
    folderId: string;
    type: QuestionType;
    content: string;
    options?: string[];
    answer: string | string[];
    analysis: string;
    difficulty: 'easy' | 'medium' | 'hard';
    creator: string;
    createdAt: string;
}

export interface QuestionFolder {
    id: string;
    name: string;
}

export const mockFolders: QuestionFolder[] = [
    { id: 'folder-1', name: '第一章：Python入门' },
    { id: 'folder-2', name: '第二章：数据类型与变量' },
    { id: 'folder-3', name: '第三章：控制流' },
    { id: 'folder-4', name: '第四章：函数与模块' },
    { id: 'folder-unassigned', name: '未分类题目' },
];

export const mockQuestions: Question[] = [
    {
        id: 'q-1',
        folderId: 'folder-1',
        type: 'single-choice',
        content: '以下哪个是 Python 中的关键字？',
        options: ['function', 'def', 'var', 'int'],
        answer: 'def',
        analysis: '在Python中，`def` 用于定义函数，是一个关键字。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-21',
    },
    {
        id: 'q-2',
        folderId: 'folder-2',
        type: 'multi-choice',
        content: 'Python 中不可变的数据类型有哪些？',
        options: ['List', 'Tuple', 'String', 'Set'],
        answer: ['Tuple', 'String'],
        analysis: 'Tuple（元组）和 String（字符串）是不可变的，而 List（列表）和 Set（集合）是可变的。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-20',
    },
    {
        id: 'q-3',
        folderId: 'folder-3',
        type: 'true-false',
        content: 'Python 中的 `else` 子句只能与 `if` 语句一起使用。',
        answer: 'false',
        analysis: '`else` 子句也可以与 `for` 和 `while` 循环（在循环正常结束时执行）以及 `try...except` 语句一起使用。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-19',
    },
    {
        id: 'q-4',
        folderId: 'folder-4',
        type: 'programming',
        content: '请编写一个函数 `fib(n)`，返回斐波那契数列的第 n 项。',
        answer: 'def fib(n):\n  a, b = 0, 1\n  for _ in range(n):\n    a, b = b, a + b\n  return a',
        analysis: '使用迭代的方式可以有效地计算斐波那契数列，避免递归带来的性能问题。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-18',
    },
    {
        id: 'q-5',
        folderId: 'folder-unassigned',
        type: 'short-answer',
        content: '请简述 Python 中 GIL（全局解释器锁）的作用和影响。',
        answer: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-17',
        analysis: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
    },
    {
        id: 'q-6',
        folderId: 'folder-1',
        type: 'single-choice',
        content: 'Python 的官方缩写是什么？',
        answer: 'py',
        analysis: '通常使用 .py 作为Python文件的扩展名。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-22',
    },
    {
        id: 'q-7',
        folderId: 'folder-2',
        type: 'fill-in',
        content: '在Python中，创建一个空集合应该使用 ____。',
        answer: 'set()',
        analysis: '{} 创建的是一个空字典，而不是空集合。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-22',
    },
    {
        id: 'q-8',
        folderId: 'folder-1',
        type: 'single-choice',
        content: '以下哪个是 Python 中的关键字？',
        options: ['function', 'def', 'var', 'int'],
        answer: 'def',
        analysis: '在Python中，`def` 用于定义函数，是一个关键字。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-21',
    },
    {
        id: 'q-9',
        folderId: 'folder-2',
        type: 'multi-choice',
        content: 'Python 中不可变的数据类型有哪些？',
        options: ['List', 'Tuple', 'String', 'Set'],
        answer: ['Tuple', 'String'],
        analysis: 'Tuple（元组）和 String（字符串）是不可变的，而 List（列表）和 Set（集合）是可变的。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-20',
    },
    {
        id: 'q-10',
        folderId: 'folder-3',
        type: 'true-false',
        content: 'Python 中的 `else` 子句只能与 `if` 语句一起使用。',
        answer: 'false',
        analysis: '`else` 子句也可以与 `for` 和 `while` 循环（在循环正常结束时执行）以及 `try...except` 语句一起使用。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-19',
    },
    {
        id: 'q-11',
        folderId: 'folder-4',
        type: 'programming',
        content: '请编写一个函数 `fib(n)`，返回斐波那契数列的第 n 项。',
        answer: 'def fib(n):\n  a, b = 0, 1\n  for _ in range(n):\n    a, b = b, a + b\n  return a',
        analysis: '使用迭代的方式可以有效地计算斐波那契数列，避免递归带来的性能问题。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-18',
    },
    {
        id: 'q-12',
        folderId: 'folder-unassigned',
        type: 'short-answer',
        content: '请简述 Python 中 GIL（全局解释器锁）的作用和影响。',
        answer: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-17',
        analysis: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
    },
    {
        id: 'q-13',
        folderId: 'folder-1',
        type: 'single-choice',
        content: 'Python 的官方缩写是什么？',
        answer: 'py',
        analysis: '通常使用 .py 作为Python文件的扩展名。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-22',
    },
    {
        id: 'q-14',
        folderId: 'folder-2',
        type: 'fill-in',
        content: '在Python中，创建一个空集合应该使用 ____。',
        answer: 'set()',
        analysis: '{} 创建的是一个空字典，而不是空集合。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-22',
    },
    {
        id: 'q-15',
        folderId: 'folder-1',
        type: 'single-choice',
        content: '以下哪个是 Python 中的关键字？',
        options: ['function', 'def', 'var', 'int'],
        answer: 'def',
        analysis: '在Python中，`def` 用于定义函数，是一个关键字。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-21',
    },
    {
        id: 'q-16',
        folderId: 'folder-2',
        type: 'multi-choice',
        content: 'Python 中不可变的数据类型有哪些？',
        options: ['List', 'Tuple', 'String', 'Set'],
        answer: ['Tuple', 'String'],
        analysis: 'Tuple（元组）和 String（字符串）是不可变的，而 List（列表）和 Set（集合）是可变的。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-20',
    },
    {
        id: 'q-17',
        folderId: 'folder-3',
        type: 'true-false',
        content: 'Python 中的 `else` 子句只能与 `if` 语句一起使用。',
        answer: 'false',
        analysis: '`else` 子句也可以与 `for` 和 `while` 循环（在循环正常结束时执行）以及 `try...except` 语句一起使用。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-19',
    },
    {
        id: 'q-18',
        folderId: 'folder-4',
        type: 'programming',
        content: '请编写一个函数 `fib(n)`，返回斐波那契数列的第 n 项。',
        answer: 'def fib(n):\n  a, b = 0, 1\n  for _ in range(n):\n    a, b = b, a + b\n  return a',
        analysis: '使用迭代的方式可以有效地计算斐波那契数列，避免递归带来的性能问题。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-18',
    },
    {
        id: 'q-19',
        folderId: 'folder-unassigned',
        type: 'short-answer',
        content: '请简述 Python 中 GIL（全局解释器锁）的作用和影响。',
        answer: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-17',
        analysis: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
    },
    {
        id: 'q-20',
        folderId: 'folder-1',
        type: 'single-choice',
        content: 'Python 的官方缩写是什么？',
        answer: 'py',
        analysis: '通常使用 .py 作为Python文件的扩展名。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-22',
    },
    {
        id: 'q-21',
        folderId: 'folder-2',
        type: 'fill-in',
        content: '在Python中，创建一个空集合应该使用 ____。',
        answer: 'set()',
        analysis: '{} 创建的是一个空字典，而不是空集合。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-22',
    },
    {
        id: 'q-22',
        folderId: 'folder-1',
        type: 'single-choice',
        content: '以下哪个是 Python 中的关键字？',
        options: ['function', 'def', 'var', 'int'],
        answer: 'def',
        analysis: '在Python中，`def` 用于定义函数，是一个关键字。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-21',
    },
    {
        id: 'q-32',
        folderId: 'folder-2',
        type: 'multi-choice',
        content: 'Python 中不可变的数据类型有哪些？',
        options: ['List', 'Tuple', 'String', 'Set'],
        answer: ['Tuple', 'String'],
        analysis: 'Tuple（元组）和 String（字符串）是不可变的，而 List（列表）和 Set（集合）是可变的。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-20',
    },
    {
        id: 'q-24',
        folderId: 'folder-3',
        type: 'true-false',
        content: 'Python 中的 `else` 子句只能与 `if` 语句一起使用。',
        answer: 'false',
        analysis: '`else` 子句也可以与 `for` 和 `while` 循环（在循环正常结束时执行）以及 `try...except` 语句一起使用。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-19',
    },
    {
        id: 'q-25',
        folderId: 'folder-4',
        type: 'programming',
        content: '请编写一个函数 `fib(n)`，返回斐波那契数列的第 n 项。',
        answer: 'def fib(n):\n  a, b = 0, 1\n  for _ in range(n):\n    a, b = b, a + b\n  return a',
        analysis: '使用迭代的方式可以有效地计算斐波那契数列，避免递归带来的性能问题。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-18',
    },
    {
        id: 'q-26',
        folderId: 'folder-unassigned',
        type: 'short-answer',
        content: '请简述 Python 中 GIL（全局解释器锁）的作用和影响。',
        answer: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
        difficulty: 'hard',
        creator: '王老师',
        createdAt: '2024-05-17',
        analysis: 'GIL是CPython解释器中的一个锁，它确保任何时候只有一个线程在执行Python字节码。这简化了内存管理，但也意味着在多核CPU上，CPython的多线程无法真正实现并行计算，对于CPU密集型任务效果不佳，但对于I/O密集型任务影响不大。',
    },
    {
        id: 'q-27',
        folderId: 'folder-1',
        type: 'single-choice',
        content: 'Python 的官方缩写是什么？',
        answer: 'py',
        analysis: '通常使用 .py 作为Python文件的扩展名。',
        difficulty: 'easy',
        creator: '王老师',
        createdAt: '2024-05-22',
    },
    {
        id: 'q-28',
        folderId: 'folder-2',
        type: 'fill-in',
        content: '在Python中，创建一个空集合应该使用 ____。',
        answer: 'set()',
        analysis: '{} 创建的是一个空字典，而不是空集合。',
        difficulty: 'medium',
        creator: 'AI助手',
        createdAt: '2024-05-22',
    },
];