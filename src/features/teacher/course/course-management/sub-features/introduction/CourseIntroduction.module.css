/* 确保这些样式都在您的文件中 */

.pageContainer {
    display: flex;
    flex-direction: column;
    gap: 24px;
    padding: 16px;
}

.mainGrid {
    display: grid;
    gap: 24px;
    grid-template-columns: 1fr 0.8fr 0.8fr;
    grid-auto-rows: auto;
    grid-template-areas:
        "objectives resources timeline"
        "methods    methods  timeline"
        "assessment tools     tools";
}

.objectivesCardWrapper,
.timelineCardWrapper,
.methodsCardWrapper,
.resourcesCardWrapper,
.assessmentCardWrapper,
.toolsCardWrapper {
    /* 如果这些 wrapper 内部还有其他元素，需要让它们也成为flex容器 */
    display: flex;
}

.objectivesCardWrapper { grid-area: objectives; }
.timelineCardWrapper { grid-area: timeline; }
.methodsCardWrapper { grid-area: methods; }
.resourcesCardWrapper { grid-area: resources; }
.assessmentCardWrapper { grid-area: assessment; }
.toolsCardWrapper { grid-area: tools; }

.objectivesCardWrapper > div,

.resourcesCardWrapper > div,
.assessmentCardWrapper > div,
.toolsCardWrapper > div {
    height: 600px;
    width: 100%;
}

.objectivesCardWrapper  {
    display: flex; /* 1. 让包裹器自身成为 Flex 容器 */
    flex-direction: column; /* 2. 子元素垂直排列 */
}

.methodsCardWrapper > div {
    height: 400px;
    width: 100%;
}

.timelineCardWrapper > div {
    height: 1024px; /* 让时间线卡片自适应高度 */
    min-height: 600px; /* 给一个最小高度以保证美观 */
}

@media (max-width: 1200px) {
    .mainGrid {
        grid-template-columns: 1fr 1fr;
        grid-template-areas:
          "timeline   timeline"
          "objectives objectives"
          "methods    resources"
          "assessment tools";
    }
}

@media (max-width: 900px) {
    .mainGrid {
        grid-template-columns: 1fr;
        grid-template-areas:
          "objectives"
          "timeline"
          "methods"
          "resources"
          "assessment"
          "tools";
    }
    .timelineCardWrapper > div { min-height: auto; }
}

.loadingContainer, .errorContainer {
    width: 100%;
    height: 100%;
    min-height: 500px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 20px;
}

.spinner {
    width: 48px;
    height: 48px;
    border: 5px solid var(--teacher-primary-light);
    border-top-color: var(--teacher-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin { to { transform: rotate(360deg); } }

.loadingContainer p {
    font-size: 18px;
    font-weight: 500;
    color: var(--teacher-text-secondary);
}

.errorContainer h3 {
    font-size: 22px;
    color: #ef4444;
    display: flex;
    align-items: center;
    gap: 12px;
}

.errorContainer p {
    font-size: 16px;
    color: var(--teacher-text-secondary);
}

.errorContainer button {
    margin-top: 16px;
    padding: 10px 24px;
    background-color: var(--teacher-primary);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    cursor: pointer;
    transition: opacity 0.2s;
}

.errorContainer button:hover { opacity: 0.9; }